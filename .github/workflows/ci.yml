name: Build and Release

on:
  # 当推送 tag 时触发发布
  push:
    tags:
      - 'v*'
    branches:
      - main
  # PR 时只运行测试
  pull_request:
    branches: [ main ]

# 显式声明所需权限
permissions:
  contents: write      # 创建 Release 和上传文件
  packages: write      # 发布包 (如果需要)
  issues: write        # 创建 issues (可选)
  pull-requests: write # 创建 PR (可选)

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # 第一步：代码质量检查和测试
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features --verbose

      - name: Check documentation
        run: cargo doc --no-deps --all-features

  # 第二步：多平台构建
  build:
    name: Build ${{ matrix.target }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: yml-diff-linux-x86_64
            cross: false

          # Linux ARM64 (交叉编译)
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: yml-diff-linux-arm64
            cross: true

          # Windows x86_64
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            name: yml-diff-windows-x86_64.exe
            cross: true

          # macOS x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: yml-diff-macos-x86_64
            cross: false

          # macOS ARM64 (Apple Silicon)
          - target: aarch64-apple-darwin
            os: macos-latest
            name: yml-diff-macos-arm64
            cross: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      # 安装交叉编译工具
      - name: Install cross-compilation tools
        if: matrix.cross
        run: |
          case "${{ matrix.target }}" in
            "x86_64-pc-windows-gnu")
              sudo apt-get update
              sudo apt-get install -y gcc-mingw-w64-x86-64
              ;;
            "aarch64-unknown-linux-gnu")
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu
              ;;
          esac

      # 安装 cross 工具 (更可靠的交叉编译)
      - name: Install cross
        if: matrix.cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      # 构建二进制文件
      - name: Build binary
        run: |
          if [[ "${{ matrix.cross }}" == "true" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      # 打包二进制文件
      - name: Package binary
        shell: bash
        run: |
          mkdir -p dist
          
          # 复制二进制文件并重命名
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp target/${{ matrix.target }}/release/yml-diff.exe dist/${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/yml-diff dist/${{ matrix.name }}
          fi
          
          # 创建压缩包 (可选)
          cd dist
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            zip ${{ matrix.name }}.zip ${{ matrix.name }}
          else
            tar -czf ${{ matrix.name }}.tar.gz ${{ matrix.name }}
          fi

      # 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: dist/${{ matrix.name }}*

  # 第三步：创建 GitHub Release
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      # 重新组织文件结构
      - name: Prepare release files
        run: |
          mkdir -p release
          find dist -name "yml-diff-*" -type f | while read file; do
            cp "$file" release/
          done
          ls -la release/

      # 生成 checksums
      - name: Generate checksums
        run: |
          cd release
          sha256sum yml-diff-* > checksums.txt
          cat checksums.txt

      # 创建 Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
          body: |
            ## 安装方法
            
            ### macOS
            ```bash
            # Intel Mac
            curl -L -o yml-diff https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/yml-diff-macos-x86_64
            
            # Apple Silicon Mac  
            curl -L -o yml-diff https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/yml-diff-macos-arm64
            
            chmod +x yml-diff
            sudo mv yml-diff /usr/local/bin/
            ```
            
            ### Linux
            ```bash
            # x86_64
            curl -L -o yml-diff https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/yml-diff-linux-x86_64
            
            # ARM64  
            curl -L -o yml-diff https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/yml-diff-linux-arm64
            
            chmod +x yml-diff
            sudo mv yml-diff /usr/local/bin/
            ```
            
            ### Windows
            ```powershell
            # 下载并解压到 PATH 目录
            Invoke-WebRequest -Uri "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/yml-diff-windows-x86_64.exe" -OutFile "yml-diff.exe"
            ```
            
            ### 一键安装脚本
            ```bash
            # Unix/Linux/macOS
            curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
            
            # Windows PowerShell
            iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/${{ github.repository }}/main/install.ps1'))
            ```
            
            ## 验证安装
            ```bash
            yml-diff --version
            yml-diff --help
            ```
            
            ## 校验文件完整性
            下载 `checksums.txt` 并验证：
            ```bash
            sha256sum -c checksums.txt
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}